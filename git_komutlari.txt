git init //klasörü kontrol eder
echo "Yazi text" > deneme.txt // biliyorsun
git status //mevcut durumu belirtir

git config --global user.email "youremail.com"
git config --global user.name "Your Name"

git add . //nokta ile klasörde var olan her şey eklenir
git add --all // nokta ile aynı şeyi yapar
git commit -m "yorum yapılacak"

git rm <dosya adi> //dosyayı siler eğer repoda pushlanmamışsa silmez 

git init --bare "ProjeAdi.git" //yalın bir repo oluşturur. Yalın repoda çalışılamaz

git clone "ProjeAdi.git" //klonlar

git push origin main // değişiklikleri repoya atar
git pull origin main // değişiklikleri repodan çeker

git log // logları gösterir
git log --online //loglar tek satırda gösteririlir
git log -n 3 //son 3 satırda gösterir

git commit --ammend //en son commit üzerinde değişiklik yapmayı sağlıyor

git revert "geriye çevirmek istediğim commit hashi"

git tag -a v1.0.1 -m "1.0.1" //verison bilgisi ekler


Adımlar
Adım 1: Yeni Bir Klasör Oluşturun ve Git Başlatın
sh

mkdir my_project
cd my_project
git init

Adım 2: Dosyalar Ekleyin ve İlk Commit'i Yapın
sh

# Örnek dosya ekleyin
echo "# My Project" > README.md
mkdir src
touch src/main.py

# Dosyaları izlemeye alın ve commit yapın
git add .
git commit -m "Initial commit"

Adım 3: Uzak Depo (Remote Repository) Ekleyin ve İlk Push'u Yapın
sh

# Uzak depoyu ekleyin
git remote add origin https://github.com/OmerFaruk-Celik/my_project.git

# Uzak depodaki değişiklikleri çekin ve rebase yapın
git pull origin main --rebase

# Değişiklikleri uzak depoya gönderin
git push -u origin main

Özet Adımlar

    Yeni klasör oluşturma ve git başlatma:
    sh

mkdir my_project
cd my_project
git init

Dosya ekleme ve ilk commit:
sh

echo "# My Project" > README.md
mkdir src
touch src/main.py
git add .
git commit -m "Initial commit"

Uzak depo ekleme ve push:
sh

git remote add origin https://github.com/OmerFaruk-Celik/my_project.git
git pull origin main --rebase
git push -u origin main

